server: 
    # 服务端口
    port: @server.port@
    # 服务路径
    contextPath: @server.contextpath@

spring:
    # 服务名称
    application:
        name: processor-@kafka.topic@
    # 服务当前使用的profile
    profiles: 
        active: @spring.profiles.active@
    jackson:
        # json中日期是否用timestamps格式交互
        serialization.write-dates-as-timestamps: true
        # json中遇到无效变量是否报错
        deserialization.FAIL_ON_UNKNOWN_PROPERTIES: off
    kafka:
        bootstrap-servers: 127.0.0.1:9092
        consumer:
            group-id: processor-consumer-group
            auto-offset-reset: earliest
            enable-auto-commit: true
            auto-commit-interval: 100
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    redis:
        # Redis数据库索引（默认为0）
        database: 0
        # Redis服务器地址
        host: 127.0.0.1
        # Redis服务器连接端口
        port: @redis.port@
        pool:
            # 连接池最大连接数（使用负值表示没有限制）
            max-active: 8
            # 连接池最大阻塞等待时间（使用负值表示没有限制）
            max-wait: -1
            # 连接池中的最大空闲连接
            max-idle: 8
            # 连接池中的最小空闲连接
            min-idle: 0
        # 连接超时时间（毫秒）
        timeout: 0
# LOG相关设置
logging:
    path: @logging.path@

kafka:
  topic: @kafka.topic@
